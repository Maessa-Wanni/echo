[project]
name = "Dembrane"
version = "1.1.0"
description = "Python project for the Dembrane API"
requires-python = ">= 3.11"
dependencies = [
    # API server
    "fastapi==0.109.*",
    "uvicorn[standard]==0.27.*",
    "python-multipart==0.0.*",
    "flair>=0.15.1",
    "pyannote-audio>=3.3.1",
    "langdetect",
    "transformers",
    "rake-nltk",
    "celery[redis]>=5.4.0",
    # Langchain
    "langchain==0.1.*",
    "langchain-community==0.0.*",
    "langchain-experimental==0.0.57",
    "langchain-openai==0.0.*",
    "pypdf==4.0.*",
    # SDKs for Models
    "openai==1.57.*",
    "anthropic==0.43.*",
    # Data
    "pandas==2.2.*",
    "numpy==1.26.*",
    "scikit-learn==1.4.*",
    # Tools
    "jinja2==3.1.*",
    "ffmpeg-python>=0.2.0",
    "flower>=2.0.1",
    # Database
    "SQLAlchemy==2.0.*",
    "alembic==1.13.*",
    "psycopg[binary,pool]==3.1.*",
    "pgvector==0.2.*",
    "directus-sdk-py>=1.1.0",
    # Config
    "python-dotenv==1.0.*",
    # Other
    "backoff==2.2.*",
    "aiofiles==23.2.*",
    "sentry-sdk[sqlalchemy,fastapi,celery]",
    "python-jose[cryptography]>=3.3.0",
    # Types
    "types-aiofiles==23.2.*",
    "types-tqdm > 4",
    # Uncategorized
    "mypy",
    "ruff",
    "isort",
    "pandas-stubs>=2.2.2.240514",
    "types-requests>=2.32.0.20240602",
    "types-python-jose>=3.3.4.20240106",
    "litellm>=1.59.9",
    # "trankit @ git+https://github.com/nlp-uoregon/trankit",
]

[tool.setuptools]
packages = ["dembrane"]

[tool.rye]
virtual = true
managed = true

[tool.rye.scripts]
"format" = { chain = ["format:isort", "format:ruff", "fix:ruff"] }
"format:ruff" = "ruff format"
"format:isort" = "isort ."
"lint" = { chain = ["check:ruff", "typecheck"] }
"check:ruff" = "ruff ."
"fix:ruff" = "ruff --fix ."
typecheck = { chain = ["typecheck:mypy"] }
"typecheck:mypy" = "mypy ."

[tool.mypy]
plugins = 'pydantic.mypy'
exclude = ['server/alembic', 'alembic', 'scripts']
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
follow_imports = "skip"
module = ["trankit.*"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.ruff]
line-length = 100
output-format = "grouped"
target-version = "py311"

select = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "alembic",
    'scripts',
]
ignore = [
    # mutable defaults
    "B006",
]
unfixable = [
    # disable auto fix for print statements
    "T201",
    "T203",
]
ignore-init-module-imports = true
indent-width = 4

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",  # isort
    "I",
    # bugbear rules
    "B",
    # remove unused imports
    "F401",
    # bare except statements
    "E722",
    # unused arguments
    "ARG",
    # print statements
    # "T201",
    # "T203",
    # misuse of typing.TYPE_CHECKING
    "TCH004",
    # import rules
    "TID251",
]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
length-sort = true
length-sort-straight = true
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
known-first-party = ["dembrane"]
